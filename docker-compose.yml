version: "3.2"

services:
  # The registry for all local images
  registry:
    image: registry:2
    restart: unless-stopped
    ports:
      - "5002:5002"
    environment:
      # REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      # REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      # REGISTRY_AUTH: htpasswd
      # REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      # REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_HTTP_SECRET: "${REGISTRY_SECRET}"
      REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
      REGISTRY_PROXY_USERNAME: circle4regentmarkets
      REGISTRY_PROXY_PASSWORD: "${DOCKERHUB_PASSWORD}"
    volumes:
      - ./registry/data:/var/lib/registry
      - ./registry/certs:/certs:ro
      - ./registry/auth:/auth

  # Full Redis cluster api - add more nodes to scale horizontally, ensure that
  # the REDIS_NODES env var is correctly populated to make sure they
  # are all picked up correctly. Note that this should be able to adapt
  # to docker networking changes - on restart the nodes are rediscovered.

  api-redis-node-0:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - api_redis
    volumes:
      - api-redis-0-data:/bitnami/redis
    environment:
      - "REDIS_NODES=api-redis-node-0 api-redis-node-1 api-redis-node-2 api-redis-node-3 api-redis-node-4 api-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"
      - "REDIS_CLUSTER_CREATOR=1"

  api-redis-node-1:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - api_redis
    volumes:
      - api-redis-1-data:/bitnami/redis
    environment:
      - "REDIS_NODES=api-redis-node-0 api-redis-node-1 api-redis-node-2 api-redis-node-3 api-redis-node-4 api-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  api-redis-node-2:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - api_redis
    volumes:
      - api-redis-2-data:/bitnami/redis
    environment:
      - "REDIS_NODES=api-redis-node-0 api-redis-node-1 api-redis-node-2 api-redis-node-3 api-redis-node-4 api-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  api-redis-node-3:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - api_redis
    volumes:
      - api-redis-3-data:/bitnami/redis
    environment:
      - "REDIS_NODES=api-redis-node-0 api-redis-node-1 api-redis-node-2 api-redis-node-3 api-redis-node-4 api-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  api-redis-node-4:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - api_redis
    volumes:
      - api-redis-4-data:/bitnami/redis
    environment:
      - "REDIS_NODES=api-redis-node-0 api-redis-node-1 api-redis-node-2 api-redis-node-3 api-redis-node-4 api-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  api-redis-node-5:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - api_redis
    volumes:
      - api-redis-5-data:/bitnami/redis
    environment:
      - "REDIS_NODES=api-redis-node-0 api-redis-node-1 api-redis-node-2 api-redis-node-3 api-redis-node-4 api-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  
# ... end of api Redis cluster nodes list here

# Dedicated Database for each category api.

  api-pg-0:
    image: docker.io/bitnami/postgresql-repmgr:14-debian-10
#    ports:
#      - 5432
    volumes:
      - api-pg-0-data:/bitnami/postgresql
    networks:
      - api_database
    environment:
      - REPMGR_NODE_NAME=api-pg-0
      - REPMGR_NODE_NETWORK_NAME=api-pg-0
      - REPMGR_PRIMARY_HOST=api-pg-0
      - REPMGR_PARTNER_NODES=api-pg-0
      - REPMGR_PASSWORD=repmgrpass
      - POSTGRESQL_PASSWORD=
      - POSTGRESQL_DATABASE=api
      # Add specific user from env if needed.



  # Full Redis cluster data - add more nodes to scale horizontally, ensure that
  # the REDIS_NODES env var is correctly populated to make sure they
  # are all picked up correctly. Note that this should be able to adapt
  # to docker networking changes - on restart the nodes are rediscovered.

  data-redis-node-0:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - data_redis
    volumes:
      - data-redis-0-data:/bitnami/redis
    environment:
      - "REDIS_NODES=data-redis-node-0 data-redis-node-1 data-redis-node-2 data-redis-node-3 data-redis-node-4 data-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"
      - "REDIS_CLUSTER_CREATOR=1"

  data-redis-node-1:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - data_redis
    volumes:
      - data-redis-1-data:/bitnami/redis
    environment:
      - "REDIS_NODES=data-redis-node-0 data-redis-node-1 data-redis-node-2 data-redis-node-3 data-redis-node-4 data-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  data-redis-node-2:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - data_redis
    volumes:
      - data-redis-2-data:/bitnami/redis
    environment:
      - "REDIS_NODES=data-redis-node-0 data-redis-node-1 data-redis-node-2 data-redis-node-3 data-redis-node-4 data-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  data-redis-node-3:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - data_redis
    volumes:
      - data-redis-3-data:/bitnami/redis
    environment:
      - "REDIS_NODES=data-redis-node-0 data-redis-node-1 data-redis-node-2 data-redis-node-3 data-redis-node-4 data-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  data-redis-node-4:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - data_redis
    volumes:
      - data-redis-4-data:/bitnami/redis
    environment:
      - "REDIS_NODES=data-redis-node-0 data-redis-node-1 data-redis-node-2 data-redis-node-3 data-redis-node-4 data-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  data-redis-node-5:
    extends:
      file: redis.yml
      service: redis-node
    networks:
      - data_redis
    volumes:
      - data-redis-5-data:/bitnami/redis
    environment:
      - "REDIS_NODES=data-redis-node-0 data-redis-node-1 data-redis-node-2 data-redis-node-3 data-redis-node-4 data-redis-node-5"
      - "REDIS_CLUSTER_REPLICAS=0"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=10"
      - "REDIS_CLUSTER_DNS_LOOKUP_RETRIES=30"
      - "REDIS_DNS_RETRIES=30"

  
# ... end of data Redis cluster nodes list here

# Dedicated Database for each category data.

  data-pg-0:
    image: docker.io/bitnami/postgresql-repmgr:14-debian-10
#    ports:
#      - 5432
    volumes:
      - data-pg-0-data:/bitnami/postgresql
    networks:
      - data_database
    environment:
      - REPMGR_NODE_NAME=data-pg-0
      - REPMGR_NODE_NETWORK_NAME=data-pg-0
      - REPMGR_PRIMARY_HOST=data-pg-0
      - REPMGR_PARTNER_NODES=data-pg-0
      - REPMGR_PASSWORD=repmgrpass
      - POSTGRESQL_PASSWORD=
      - POSTGRESQL_DATABASE=data
      # Add specific user from env if needed.





  # Start list of services

  data_actionizer:
    build: 
      context: ./
      dockerfile: base/python/Dockerfile
      args:
        base_dir: "base/python"
        service_dir: "services/data/actionizer"
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "data"
      DATABASE: "postgresql://data-pg-0"
      LOG_LEVEL: "info"
      REDIS: "redis://data-redis-node-0:6379"
      REDIS_CLUSTER: "1"
      SERVICE_DIR: "/app/"
      SERVICE_NAME: "Service::"
    networks:
      - services
      - data_redis
      - data_database
    depends_on:
      - data-redis-node-0
      - data-redis-node-1
      - data-redis-node-2
      - data-redis-node-3
      - data-redis-node-4
      - data-redis-node-5
      - data-pg-0
    volumes:
      - ./services/data/actionizer:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro

  data_cryptonizer:
    build: 
      context: ./
      dockerfile: base/python/Dockerfile
      args:
        base_dir: "base/python"
        service_dir: "services/data/cryptonizer"
    init: true
    tty: true
    restart: unless-stopped
    environment:
      APP: "data"
      DATABASE: "postgresql://data-pg-0"
      LOG_LEVEL: "info"
      REDIS: "redis://data-redis-node-0:6379"
      REDIS_CLUSTER: "1"
      SERVICE_DIR: "/app/"
      SERVICE_NAME: "Service::"
    networks:
      - services
      - data_redis
      - data_database
    depends_on:
      - data-redis-node-0
      - data-redis-node-1
      - data-redis-node-2
      - data-redis-node-3
      - data-redis-node-4
      - data-redis-node-5
      - data-pg-0
    volumes:
      - ./services/data/cryptonizer:/app/
      - ./pg_service.conf:/root/.pg_service.conf:ro


  # End list of services

volumes:
  api-redis-0-data:
  api-redis-1-data:
  api-redis-2-data:
  api-redis-3-data:
  api-redis-4-data:
  api-redis-5-data:
  api-pg-0-data:
  data-redis-0-data:
  data-redis-1-data:
  data-redis-2-data:
  data-redis-3-data:
  data-redis-4-data:
  data-redis-5-data:
  data-pg-0-data:

networks:
  default:
  services:
  api_redis:
  api_database:
  data_redis:
  data_database:
